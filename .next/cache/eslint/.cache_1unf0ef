[{"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\pages\\index.tsx":"1","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\pages\\_app.tsx":"2","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\CollectionItem\\CollectionItem.tsx":"3","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\Header\\Header.tsx":"4","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\icons\\index.tsx":"5","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\icons\\LoadingIcon.tsx":"6","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\WalletManager\\WalletManager.tsx":"7","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\WalletProvider\\WalletProvider.tsx":"8","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\lib\\gem-farm\\common\\gem-bank\\index.ts":"9","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\lib\\gem-farm\\common\\gem-farm\\index.ts":"10"},{"size":17785,"mtime":1655434735042,"results":"11","hashOfConfig":"12"},{"size":1128,"mtime":1654272579568,"results":"13","hashOfConfig":"12"},{"size":4423,"mtime":1654331462244,"results":"14","hashOfConfig":"12"},{"size":4085,"mtime":1654330148506,"results":"15","hashOfConfig":"12"},{"size":13863,"mtime":1654272579540,"results":"16","hashOfConfig":"12"},{"size":873,"mtime":1654272579538,"results":"17","hashOfConfig":"12"},{"size":2732,"mtime":1654272579531,"results":"18","hashOfConfig":"12"},{"size":2310,"mtime":1654272579535,"results":"19","hashOfConfig":"12"},{"size":3408,"mtime":1654272579555,"results":"20","hashOfConfig":"12"},{"size":8334,"mtime":1654272579557,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"85sl7d",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\pages\\index.tsx",["55","56","57","58","59"],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\pages\\_app.tsx",["60"],[],"import React from \"react\"\r\nimport Head from \"next/head\"\r\nimport { ThemeProvider } from \"theme-ui\"\r\nimport Router, { AppProps } from \"next/dist/shared/lib/router/router\"\r\nimport dynamic from \"next/dynamic\"\r\n\r\n// import \"nprogress/nprogress.css\" //styles of nprogress\r\n// import \"normalize.css/normalize.css\"\r\nimport \"@solana/wallet-adapter-react-ui/styles.css\"\r\n\r\n// @ts-ignore\r\nimport withGA from \"next-ga\"\r\n\r\nimport defaultTheme from \"../styles/theme\"\r\n\r\nconst WalletProvider = dynamic(\r\n  () => import(\"../components/WalletProvider/WalletProvider\"),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\n\r\nfunction App(props: AppProps) {\r\n  const { Component, pageProps } = props\r\n\r\n  // const [colorMode, setColorMode] = useColorMode()\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Head>\r\n        {/** Load font styles directly on the document to prevent flashes */}\r\n        <link href=\"/fonts/fonts.css\" rel=\"stylesheet\" />\r\n      </Head>\r\n\r\n      <WalletProvider>\r\n        <Component {...pageProps} />\r\n      </WalletProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default withGA(process.env.NEXT_PUBLIC_GA_ID, Router)(App)\r\n","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\CollectionItem\\CollectionItem.tsx",["61","62"],[],"/** @jsxImportSource theme-ui */\r\nimport React, { useRef, useState } from \"react\"\r\nimport { Button, Flex, Text } from \"theme-ui\"\r\n\r\nimport { DotsIcon } from \"@/components/icons/\"\r\nimport useOutsideClick from \"@/hooks/useOutsideClick\"\r\nimport { NFT } from \"@/hooks/useWalletNFTs\"\r\n\r\ntype Props = {\r\n  item: NFT\r\n  additionalOptions?: React.ReactElement\r\n  onClick?: (item: NFT) => void\r\n  className?: string\r\n}\r\n\r\nconst CollectionItem = (props: Props) => {\r\n  const { item, additionalOptions = null, className, onClick } = props\r\n  const [isDropdownActive, setIsDropdownActive] = useState(false)\r\n  const wrapperRef = useRef(null)\r\n  useOutsideClick(wrapperRef, () => setIsDropdownActive(false))\r\n\r\n  const handleDropdownToggle = () => {\r\n    setIsDropdownActive((previous) => !previous)\r\n  }\r\n\r\n  if (!item) return null\r\n\r\n  const { onchainMetadata, externalMetadata } = item\r\n\r\n  const handleOnClick = (item: NFT) => () => onClick ? onClick(item) : true\r\n  const handleKeyDown =\r\n    (item: NFT) => (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (onClick && e.keyCode == 13) {\r\n        onClick(item)\r\n      }\r\n\r\n      return true\r\n    }\r\n\r\n  return (\r\n    <Flex\r\n      tabIndex={1}\r\n      ref={wrapperRef}\r\n      sx={{\r\n        flexDirection: \"column\",\r\n        position: \"relative\",\r\n        transition: \"all .125s linear\",\r\n        outline: \"none\",\r\n        cursor: onClick ? \"pointer\" : \"auto\",\r\n\r\n        \"&:hover, &:focus, > .toggle-menu:focus\": {\r\n          \"> .toggle-menu\": {\r\n            visibility: \"visible\",\r\n            opacity: 1,\r\n          },\r\n\r\n          \"> img\": {\r\n            opacity: 0.7,\r\n          },\r\n        },\r\n      }}\r\n      className={className}\r\n      onClick={handleOnClick(item)}\r\n      onKeyDown={handleKeyDown(item)}\r\n    >\r\n      <Button\r\n        tabIndex={1}\r\n        variant=\"resetted\"\r\n        className=\"toggle-menu\"\r\n        onClick={handleDropdownToggle}\r\n        sx={{\r\n          display: \"flex\",\r\n          position: \"absolute\",\r\n          visibility: isDropdownActive ? \"visible\" : \"hidden\",\r\n          opacity: isDropdownActive ? 1 : 0,\r\n          right: \".8rem\",\r\n          top: \".8rem\",\r\n          zIndex: 1,\r\n          transition: \"all .125s linear\",\r\n\r\n          \"&:hover, &:focus\": {\r\n            visibility: \"visible\",\r\n            cursor: \"pointer\",\r\n            opacity: 1,\r\n          },\r\n        }}\r\n      >\r\n        <DotsIcon\r\n          sx={{\r\n            width: \"3.2rem\",\r\n            height: \"3.2rem\",\r\n            stroke: \"heading\",\r\n            strokeWidth: \"2\",\r\n          }}\r\n        />\r\n      </Button>\r\n      {/** Dropdown */}\r\n      <Flex\r\n        sx={{\r\n          position: \"absolute\",\r\n          visibility: isDropdownActive ? \"visible\" : \"hidden\",\r\n          opacity: isDropdownActive ? 1 : 0,\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-start\",\r\n          padding: \"2.4rem 1.2rem\",\r\n          top: 40,\r\n          right: 0,\r\n          backgroundColor: \"background\",\r\n          transition: \"all .125s linear\",\r\n          boxShadow: \"0px 4px 4px rgba(0,0,0,0.25)\",\r\n          gap: \".8rem\",\r\n          zIndex: 2,\r\n          fontSize: \"1.2rem\",\r\n\r\n          a: {\r\n            whiteSpace: \"nowrap\",\r\n          },\r\n        }}\r\n      >\r\n        <a\r\n          href={onchainMetadata.data.uri}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          tabIndex={1}\r\n        >\r\n          View raw JSON\r\n        </a>\r\n        <a\r\n          href={externalMetadata.image}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          tabIndex={1}\r\n        >\r\n          View image\r\n        </a>\r\n        {additionalOptions || null}\r\n      </Flex>\r\n      <img\r\n        sx={{\r\n          borderRadius: \".4rem\",\r\n          transition: \"all .125s linear\",\r\n          opacity: isDropdownActive ? 0.7 : 1,\r\n        }}\r\n        src={externalMetadata.image}\r\n      />\r\n      <Text\r\n        variant=\"small\"\r\n        sx={{\r\n          overflow: \"hidden\",\r\n          whiteSpace: \"nowrap\",\r\n          textOverflow: \"ellipsis\",\r\n          padding: \"0 .8rem\",\r\n          mt: \".8rem\",\r\n        }}\r\n      >\r\n        {externalMetadata.name}\r\n        {/* <br />\r\n    <a\r\n      href={`https://solscan.io/token/${onchainMetadata.metaData.mint}`}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {onchainMetadata.metaData.mint}\r\n    </a> */}\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CollectionItem\r\n","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\Header\\Header.tsx",["63"],[],"/** @jsxImportSource theme-ui */\r\nimport Link from \"next/link\"\r\nimport { Button, Container, Flex, Input, Text } from \"@theme-ui/components\"\r\n\r\nimport WalletManager from \"@/components/WalletManager/WalletManager\"\r\nimport { Dispatch, SetStateAction, useState } from \"react\"\r\nimport { CloseIcon, MenuIcon } from \"../icons\"\r\n\r\ntype Props = {\r\n  farmId?: string\r\n  setFarmId?: Dispatch<SetStateAction<string>>\r\n}\r\nconst Header = ({ farmId, setFarmId }: Props) => {\r\n  const [isMobileMenuActive, setIsMobileMenuActive] = useState(false)\r\n  const [isChangingFarmId, setIsChangingFarmId] = useState(false)\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        position: \"sticky\",\r\n        top: 0,\r\n        zIndex: 9,\r\n        background: (theme) => theme.colors?.backgroundGradient,\r\n        borderBottom: \"1px solid\",\r\n        borderColor: \"background2\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Flex\r\n          sx={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n          p=\".8rem\"\r\n        >\r\n          <Link href=\"/\" passHref>\r\n            <Flex as=\"a\" sx={{ alignItems: \"center\", flexDirection: \"column\" }}>\r\n              <Flex sx={{ alignItems: \"center\" }}>\r\n                <Text as=\"h1\" variant=\"headingSpecial\" ml=\".4rem\">\r\n                 \r\n                </Text>\r\n\r\n                <img\r\n                  sx={{\r\n                    maxHeight: \"4.8rem\",\r\n                  }}\r\n                  src=\"https://raw.githubusercontent.com/flipthetip/test-tsc/main/ARC%201%20-%20THE%20DARKNESS%20(4).png\"\r\n                  alt=\"TSC\"\r\n                />\r\n\r\n                <Text as=\"h1\" variant=\"headingSpecial\" ml=\".4rem\">\r\n                  \r\n                </Text>\r\n              </Flex>\r\n              {/* <Text\r\n                sx={{\r\n                  display: \"block\",\r\n                }}\r\n                variant=\"small\"\r\n              >\r\n                by Gemworks\r\n              </Text> */}\r\n            </Flex>\r\n          </Link>\r\n          <Text\r\n            variant=\"small\"\r\n            sx={{\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;&nbsp;&#8226;&nbsp;\r\n            {process.env.NEXT_PUBLIC_CONNECTION_NETWORK}\r\n          </Text>\r\n\r\n          <Flex\r\n            as=\"nav\"\r\n            sx={{\r\n              gap: \"1.6rem\",\r\n              display: \"none\",\r\n              alignItems: \"center\",\r\n\r\n              /** Mobile styles when the menu is active */\r\n              ...(isMobileMenuActive && {\r\n                display: \"flex\",\r\n                position: \"fixed\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                padding: \"1.6rem\",\r\n                transition:\r\n                  \"opacity 0.125s cubic-bezier(0.175, 0.885, 0.32, 1.275),visibility 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)\",\r\n                backgroundColor: \"background\",\r\n                zIndex: 99,\r\n\r\n                \"& > a\": {\r\n                  marginBottom: \".8rem\",\r\n                },\r\n\r\n                \"&.active\": {\r\n                  visibility: \"visible\",\r\n                  opacity: 1,\r\n                },\r\n              }),\r\n\r\n              /** Desktop styles (reset mobile) */\r\n              \"@media (min-width: 768px)\": {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                padding: 0,\r\n                position: \"relative\",\r\n              },\r\n            }}\r\n          >\r\n\r\n\r\n            <WalletManager />\r\n          </Flex>\r\n          <Button\r\n            sx={{\r\n              padding: \".8rem\",\r\n              \"@media(min-width: 768px)\": {\r\n                display: \"none\",\r\n              },\r\n            }}\r\n            onClick={() => setIsMobileMenuActive(true)}\r\n          >\r\n            <MenuIcon />\r\n          </Button>\r\n        </Flex>\r\n      </Container>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\icons\\index.tsx",[],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\icons\\LoadingIcon.tsx",[],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\WalletManager\\WalletManager.tsx",[],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\components\\WalletProvider\\WalletProvider.tsx",[],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\lib\\gem-farm\\common\\gem-bank\\index.ts",[],[],"C:\\Users\\lcasalan\\OneDrive - Meralco\\Documents\\PAO\\staking\\lib\\gem-farm\\common\\gem-farm\\index.ts",[],[],{"ruleId":"64","severity":1,"message":"65","line":54,"column":11,"nodeType":"66","endLine":55,"endColumn":48},{"ruleId":"64","severity":1,"message":"65","line":107,"column":21,"nodeType":"66","endLine":112,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":107,"column":21,"nodeType":"66","endLine":112,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":181,"column":21,"nodeType":"66","endLine":187,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":181,"column":21,"nodeType":"66","endLine":187,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":32,"column":9,"nodeType":"66","endLine":32,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":138,"column":7,"nodeType":"66","endLine":145,"endColumn":9},{"ruleId":"67","severity":1,"message":"68","line":138,"column":7,"nodeType":"66","endLine":145,"endColumn":9},{"ruleId":"64","severity":1,"message":"65","line":43,"column":17,"nodeType":"66","endLine":49,"endColumn":19},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags"]